{"version":3,"sources":["client/layout/context/movieContext/movieContext.js","client/layout/context/movieItemContext/movieItemContext.js","client/layout/context/alert/alertContext.js","client/layout/components/movieselector.js","client/layout/pages/Home.js","client/layout/pages/About.js","client/layout/components/MovieItem.js","client/layout/pages/MovieList.js","client/layout/pages/MoviePage.js","client/layout/pages/MovieDetails.js","client/layout/components/Alerts.js","client/layout/components/Navbar/navbarItems.js","client/layout/components/Navbar/navbar.js","client/layout/components/footer.js","client/layout/context/movieContext/movieReducer.js","types.js","client/layout/context/movieContext/MovieState.js","client/layout/context/movieItemContext/movieItemReducer.js","client/layout/context/movieItemContext/MovieItemState.js","client/layout/context/alert/alertReducer.js","client/layout/context/alert/AlertState.js","App.js","index.js"],"names":["movieContext","createContext","movieItemContext","alertContext","MovieSelector","useContext","MovieContext","MovieItemContext","AlertContext","history","useHistory","lang","getMovies","movieGenre","setAlert","useState","with_genres","sort_by","certification","genre","movie","setMovie","onChange","e","target","name","value","redirect","argument","push","onSubmit","preventDefault","onClick","selectedOptions","text","getRandomGenre","className","Home","About","href","rel","class","src","alt","withRouter","getMovieDetails","release_date","includes","year","slice","month","day","a","title","poster_path","overview","vote_average","MovieList","movies","clearMovies","map","MovieItem","key","id","MoviePage","getRandomMovie","randomMovie","useEffect","clicked","length","budget","revenue","genres","runtime","vote_count","MovieDetails","movieDetails","Alerts","alerts","alert","type","msg","NavbarItems","active","setActive","changeLang","checkAndSetLang","to","Navbar","Footer","state","action","payload","singleMovie","error","MovieState","props","useReducer","movieReducer","dispatch","obj","config","headers","axios","post","res","data","results","status_message","language","message","Provider","children","MovieItemState","MovieItemReducer","filter","AlertState","alertReducer","timeout","uuidv4","setTimeout","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31316d35.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nconst movieContext = createContext();\r\n\r\nexport default movieContext\r\n","import { createContext } from 'react'\r\n\r\nconst movieItemContext = createContext();\r\n\r\n\r\nexport default movieItemContext;","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;","import React, { Fragment, useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MovieContext from '../context/movieContext/movieContext';\r\nimport MovieItemContext from '../context/movieItemContext/movieItemContext';\r\nimport AlertContext from '../context/alert/alertContext';\r\n\r\nconst MovieSelector = () => {\r\n\r\n\r\n\r\n    const movieContext = useContext(MovieContext);\r\n    const movieItemContext = useContext(MovieItemContext);\r\n    const alertContext = useContext(AlertContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const { lang } = movieItemContext;\r\n    const { getMovies, movieGenre } = movieContext;\r\n    const { setAlert } = alertContext;\r\n\r\n    const [movie, setMovie] = useState({\r\n        with_genres: '',\r\n        sort_by: '',\r\n        certification: '',\r\n        genre: '',\r\n    });\r\n\r\n\r\n\r\n\r\n    const { with_genres, sort_by, certification } = movie;\r\n\r\n\r\n\r\n\r\n\r\n    const onChange = e => setMovie({\r\n        ...movie, [e.target.name]: e.target.value\r\n\r\n\r\n    });\r\n\r\n    const redirect = (argument) => {\r\n        history.push(`/${argument}`)\r\n    }\r\n\r\n    if (movieGenre) {\r\n        redirect(\"movielist\");\r\n    }\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (certification === '' || sort_by === '' || with_genres === '') {\r\n            if (lang === 'eng') {\r\n                setAlert('Please fill in all fields', 'danger')\r\n            } else {\r\n                setAlert('Por favor preencha todos os campos', 'danger')\r\n            }\r\n\r\n        } else {\r\n            getMovies({ movie, lang });\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const onClick = e => setMovie({\r\n        ...movie, genre: e.target.selectedOptions[0].text\r\n\r\n    })\r\n\r\n\r\n\r\n    const getRandomGenre = () => {\r\n        redirect(\"moviepage\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"content\">\r\n                <div className=\"primary\">\r\n                    {lang === 'eng' ? (<h1>What do you want to watch today?</h1>) : (<h1>O que você quer assistir hoje?</h1>)}\r\n\r\n                    {lang === 'eng' ? (<form className=\"botoes\" onSubmit={onSubmit}>\r\n                        <label>Genre</label>\r\n                        <select className=\"select-css\" name=\"with_genres\" onClick={onClick} onChange={onChange} >\r\n                            <option value=\"0\">Select</option>\r\n                            <option value=\"28\" name=\"Action\" className=\"active\">Action</option>\r\n                            <option value=\"12\" name=\"Adventure\">Adventure</option>\r\n                            <option value=\"16\" name=\"Animation\">Animation</option>\r\n                            <option value=\"35\" name=\"Comedy\">Comedy</option>\r\n                            <option value=\"80\" name=\"Crime\">Crime</option>\r\n                            <option value=\"99\" name=\"Documentary\">Documentary</option>\r\n                            <option value=\"18\" name=\"Drama\">Drama</option>\r\n                            <option value=\"10751\" name=\"Family\">Family</option>\r\n                            <option value=\"14\" name=\"Fantasy\">Fantasy</option>\r\n                            <option value=\"36\" name=\"History\">History</option>\r\n                            <option value=\"27\" name=\"Horror\">Horror</option>\r\n                            <option value=\"10402\" name=\"Musicals\">Musicals</option>\r\n                            <option value=\"9648\" name=\"Mystery\">Mystery</option>\r\n                            <option value=\"10749\" name=\"Romance\">Romance</option>\r\n                            <option value=\"878\" name=\"Sci-fi\">Sci-fi</option>\r\n                            <option value=\"10752\" name=\"War\">War</option>\r\n                            <option value=\"37\" name=\"Wild-West\">Wild-West</option>\r\n                        </select>\r\n                        <label>Sort By</label>\r\n                        <select className=\"select-css\" name=\"sort_by\" onChange={onChange}>\r\n                            <option value=\"0\">Select</option>\r\n                            <option value=\"popularity.desc\">Most Popular</option>\r\n                            <option value=\"popularity.asc\">Least Popular</option>\r\n                            <option value=\"vote_average.desc\">Highest Ratings</option>\r\n                            <option value=\"vote_average.asc\">Lowest Ratings</option>\r\n                            <option value=\"vrevenue.desc\">Biggest Revenue</option>\r\n                            <option value=\"primary_release_date.desc\">Most Recent</option>\r\n                            <option value=\"primary_release_date.asc\">Oldest</option>\r\n                        </select>\r\n                        <label>Content Rating</label>\r\n                        <select className=\"select-css\" name=\"certification\" onChange={onChange}>\r\n                            <option value=\"0\">Select</option>\r\n                            <option value=\"G\">G</option>\r\n                            <option value=\"PG-13\">PG-13</option>\r\n                            <option value=\"R\">R</option>\r\n                            <option value=\"NC-17\">NC-17</option>\r\n                            <option value=\"PG\">PG</option>\r\n                        </select>\r\n                        <button><i className=\"fas fa-search\"></i></button>\r\n                    </form>) : (<form className=\"botoes\" onSubmit={onSubmit}>\r\n                        <label>Gênero</label>\r\n                        <select className=\"select-css\" name=\"with_genres\" onClick={onClick} onChange={onChange} >\r\n                            <option value=\"0\">Selecione</option>\r\n                            <option value=\"28\" name=\"Ação\" className=\"active\">Ação</option>\r\n                            <option value=\"12\" name=\"Aventura\">Aventura</option>\r\n                            <option value=\"16\" name=\"Animação\">Animação</option>\r\n                            <option value=\"35\" name=\"Comédia\">Comédia</option>\r\n                            <option value=\"80\" name=\"Crime\">Crime</option>\r\n                            <option value=\"99\" name=\"Documentários\">Documentários</option>\r\n                            <option value=\"18\" name=\"Drama\">Drama</option>\r\n                            <option value=\"10751\" name=\"Família\">Família</option>\r\n                            <option value=\"14\" name=\"Fantasia\">Fantasia</option>\r\n                            <option value=\"36\" name=\"História\">História</option>\r\n                            <option value=\"27\" name=\"Terror\">Terror</option>\r\n                            <option value=\"10402\" name=\"Musicais\">Musicais</option>\r\n                            <option value=\"9648\" name=\"Mistério\">Mistério</option>\r\n                            <option value=\"10749\" name=\"Romance\">Romance</option>\r\n                            <option value=\"878\" name=\"Sci-fi\">Sci-fi</option>\r\n                            <option value=\"10752\" name=\"Guerra\">Guerra</option>\r\n                            <option value=\"37\" name=\"Velho-Oeste\">Velho-Oeste</option>\r\n                        </select>\r\n                        <label>Organizar por</label>\r\n                        <select className=\"select-css\" name=\"sort_by\" onChange={onChange}>\r\n                            <option value=\"0\">Selecione</option>\r\n                            <option value=\"popularity.desc\">Mais populares</option>\r\n                            <option value=\"popularity.asc\">Menos populares</option>\r\n                            <option value=\"vote_average.desc\">Maiores notas</option>\r\n                            <option value=\"vote_average.asc\">Menores notas</option>\r\n                            <option value=\"vrevenue.desc\">Sucesso de bilheteria</option>\r\n                            <option value=\"primary_release_date.desc\">Mais Recentes</option>\r\n                            <option value=\"primary_release_date.asc\">Mais Antigos</option>\r\n                        </select>\r\n                        <label>Classificação Indicativa</label>\r\n                        <select className=\"select-css\" name=\"certification\" onChange={onChange}>\r\n                            <option value=\"0\">Selecione</option>\r\n                            <option value=\"L\">Livre</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"12\">12</option>\r\n                            <option value=\"14\">14</option>\r\n                            <option value=\"16\">16</option>\r\n                            <option value=\"18\">18+</option>\r\n                        </select>\r\n                        <button><i className=\"fas fa-search\"></i></button>\r\n                    </form>)}\r\n\r\n                </div>\r\n                {lang === 'eng' ? (<div className=\"random-search\"><h2>I don't know! Get me a Random Movie!</h2>\r\n                    <button onClick={getRandomGenre}>\r\n                        <i className=\"fas fa-random\"></i></button></div>) : (<div className=\"random-search\"><h2>Não sei, qualquer coisa serve!</h2>\r\n                            <button onClick={getRandomGenre}>Aleatório <i className=\"fas fa-random\"></i></button></div>)}\r\n\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MovieSelector;\r\n","import React from 'react';\r\nimport MovieSelector from '../components/movieselector';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <main>\r\n            <MovieSelector />\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import React, { useContext } from 'react';\r\nimport MovieItemContext from '../context/movieItemContext/movieItemContext';\r\n\r\nconst About = () => {\r\n    const movieItemContext = useContext(MovieItemContext);\r\n\r\n    const { lang } = movieItemContext;\r\n    if (lang === 'eng') {\r\n        return (\r\n\r\n            <main>\r\n                <div className=\"about\">\r\n                    <h1>About the Project</h1>\r\n\r\n                    <p>This WebApp was created with a single goal in mind: to make people's lives easier.\r\n                    Whether you're looking for a specific recommendation based on your personal taste, or just a random movie suggestion, this app is for you.\r\n                    The design is minimalistic and very intuitive, making the user experience effortless, even if you're on mobile.\r\n                    If you'd like, there is a language button that allows you to use this app in Portuguese.\r\n                    This app works around two main functions, available right away in the home page.\r\n                    The first one, allows you to fill up a form with your preferences, and returns a list of movies based on that.\r\n                    The second one returns a random movie.\r\n                    These functions make requests to a NodeJS app that uses Express routes, middleware and route handlers to make GET requests to the Movie Database API.\r\n                    After the object with the data is back from that API, the backend returns the data to the frontend, which then renders all of the information.\r\n                    A third function is available once the list of movies was returned from the server, and that functions gets the movie's id and makes another request, but this time, to get more information about that particular movie.\r\n\r\n                    To make this fullstack web app happen, I used ReactJS, NPM, Sass, Axios, Context API, Concurrently, Dotenv and Nodemon.\r\nIf you want to check out the code for this app on GitHub, the link is right below. Check out my <a href=\"https://www.arthurcavini.com\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"orange\">portfolio</a> and follow me on social media.\r\n\r\n\r\n                </p>\r\n                    <div className=\"icons\">\r\n                        <a href=\"https://www.arthurcavini.com\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fas fa-globe fa-2x\"></i></a>\r\n                        <a href=\"https://github.com/cavini\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github fa-2x\"></i></a>\r\n                        <a href=\"https://twitter.com/arthurcavini\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-twitter fa-2x\"></i></a>\r\n                        <a href=\"https://www.linkedin.com/in/cavini/\" target=\"_blank\" rel=\"noopener noreferrer\"><i\r\n                            className=\"fab fa-linkedin-in fa-2x\"></i></a>\r\n                    </div>\r\n                    <div className=\"footer-note\">\r\n                        <div className=\"primary\">\r\n\r\n                            <a href=\"https://www.themoviedb.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <img src={\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_1-8ba2ac31f354005783fab473602c34c3f4fd207150182061e425d366e4f34596.svg\"} alt=\"The movie database logo\" />  </a>\r\n                            <p className=\"block\">This product uses the TMDb API but is not endorsed or certified by TMDb.\r\n                            Todas as informações sobre os filmes são fornecidas pela API e seus colaboradores.</p>\r\n                            <p>Design and programming by Arthur Cavini</p>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"secondary\">\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </main>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n\r\n            <main>\r\n                <div className=\"about\">\r\n                    <h1>Sobre o projeto</h1>\r\n\r\n                    <p>Este projeto surgiu da necessidade de buscar formas de entretenimento de forma rápida, fácil e descomplicada sem ter que passar pela experiência de ficar horas rolando por catálogos e listas de filmes pela internet e acabar desistindo. O maior foco desse aplicativo foi criar uma solução pensada em design responsivo e noções de UI/UX para deixar a experiência do usuário a mais agradável e intuitiva possível. Sua principal função, é através de um input mínimo do usuário, retornar uma lista personalizada e organizada de filmes de acordo com o seu gosto pessoal, ou se preferir, pode utilizar da função de busca aleatória e receber uma recomendação de filme, fazendo uma busca com valores escolhidos aleatoriamente dentro de arrays para cada parâmetro. Para colocar essa idéia em prática, precisei criar uma API em Express para esconder a minha API Key. Fiz uso dessas tecnologias também: React, NPM, Sass, NodeJS, Axios, Context API, Concurrently, Dotenv e Nodemon. Além de claro, utilizar a The Movie Database API para fornecer os filmes com suas informações. Para ver o código deste projeto e outros, o link do GitHub está aqui em baixo. Aproveite também para ver o restante do meu <a href=\"https://www.arthurcavini.com\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"orange\">portfólio</a> e seguir nas redes sociais.\r\n\r\n                </p>\r\n                    <div className=\"icons\">\r\n                        <a href=\"https://www.arthurcavini.com\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fas fa-globe fa-2x\"></i></a>\r\n                        <a href=\"https://github.com/cavini\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github fa-2x\"></i></a>\r\n                        <a href=\"https://twitter.com/arthurcavini\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-twitter fa-2x\"></i></a>\r\n                        <a href=\"https://www.linkedin.com/in/cavini/\" target=\"_blank\" rel=\"noopener noreferrer\"><i\r\n                            className=\"fab fa-linkedin-in fa-2x\"></i></a>\r\n                    </div>\r\n                    <div className=\"footer-note\">\r\n                        <div className=\"primary\">\r\n\r\n                            <a href=\"https://www.themoviedb.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <img src={\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_1-8ba2ac31f354005783fab473602c34c3f4fd207150182061e425d366e4f34596.svg\"} alt=\"The movie database logo\" />  </a>\r\n                            <p className=\"block\">This product uses the TMDb API but is not endorsed or certified by TMDb.\r\n                            Todas as informações sobre os filmes são fornecidas pela API e seus colaboradores.</p>\r\n                            <p>Criação, desenvolvimento e design por Arthur Cavini</p>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"secondary\">\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </main>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default About\r\n","import React, { useContext } from 'react';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport MovieItemContext from '../context/movieItemContext/movieItemContext';\r\n\r\n\r\n\r\nconst Movieitem = ({ movie }) => {\r\n\r\n    const movieItemContext = useContext(MovieItemContext);\r\n\r\n\r\n    const { getMovieDetails, lang } = movieItemContext;\r\n\r\n\r\n    if (!movie.release_date.includes(\"/\")) {\r\n        const year = movie.release_date.slice(0, 4)\r\n\r\n        const month = movie.release_date.slice(5, 7)\r\n        const day = movie.release_date.slice(8, 11)\r\n        movie.release_date = `${day}/${month}/${year}`\r\n    }\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const redirect = () => {\r\n        history.push('/moviedetails')\r\n    }\r\n\r\n    const onClick = async () => {\r\n        await getMovieDetails({ movie, lang });\r\n        redirect();\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if (lang === 'eng') {\r\n        return (\r\n            <div className=\"movie-item\">\r\n                <h2>{movie.title}</h2>\r\n                <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={`${movie.title} movie poster`} />\r\n                {/* <h3>Sinopse:</h3>\r\n                <p>{movie.overview}</p> */}\r\n\r\n                {movie.overview ? (\r\n                    <><h3>{\"Synopsis:\"}</h3><p>{movie.overview}</p></>) : <p>Couldn't find this movie's synopsis.</p>}\r\n\r\n\r\n                {movie.vote_average !== 0 ?\r\n                    (<h4>Rating: {<span className=\"thin\">{`${movie.vote_average}/10`}</span>}</h4>) : <h4>Not Available</h4>}\r\n                {movie.release_date ? (\r\n                    <h4>Release date: {<span className=\"thin\">{movie.release_date}</span>}</h4>) : <h4><span className=\"thin\">Not Available</span></h4>}\r\n\r\n\r\n\r\n                <a className=\"ver-mais\" onClick={onClick}>See more</a>\r\n                <a className=\"ver-sinopse\" onClick={onClick}>See full synopsis</a>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"movie-item\">\r\n                <h2>{movie.title}</h2>\r\n                <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={`Poster do filme ${movie.title}`} />\r\n                {/* <h3>Sinopse:</h3>\r\n                <p>{movie.overview}</p> */}\r\n\r\n                {movie.overview ? (\r\n                    <><h3>{\"Sinopse:\"}</h3><p>{movie.overview}</p></>) : <p>Não foi possível encontrar a sinopse deste filme.</p>}\r\n\r\n\r\n                {movie.vote_average !== 0 ?\r\n                    (<h4>Nota: {<span className=\"thin\">{`${movie.vote_average}/10`}</span>}</h4>) : <h4>Sem nota</h4>}\r\n                {movie.release_date ? (\r\n                    <h4>Data de Lançamento: {<span className=\"thin\">{movie.release_date}</span>}</h4>) : <h4><span className=\"thin\">Data de lançamento indisponível</span></h4>}\r\n\r\n\r\n\r\n                <a className=\"ver-mais\" onClick={onClick}>Ver mais</a>\r\n                <a className=\"ver-sinopse\" onClick={onClick}>Ver sinopse completa</a>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Movieitem);\r\n","import React, { Fragment, useContext } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport MovieItem from '../components/MovieItem';\r\nimport MovieContext from '../context/movieContext/movieContext';\r\nimport MovieItemContext from '../context/movieItemContext/movieItemContext';\r\n\r\n\r\n\r\n\r\nconst MovieList = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const movieContext = useContext(MovieContext);\r\n\r\n    const movieItemContext = useContext(MovieItemContext)\r\n\r\n    const { lang } = movieItemContext;\r\n\r\n\r\n\r\n    const { movies, movieGenre, clearMovies } = movieContext;\r\n\r\n    const onClick = () => {\r\n        clearMovies();\r\n        history.push('/');\r\n    }\r\n\r\n    const getRandomMovie = () => {\r\n        history.push('/moviepage');\r\n    }\r\n\r\n    if (movies) {\r\n\r\n        return (\r\n            <main>\r\n\r\n                <div className=\"movie-page\">\r\n                    <Fragment>{lang === 'eng' ? (<h1>Found these {movieGenre} movies for you!</h1>) : <h1>Encontramos estes filmes de {movieGenre} para você!</h1>}</Fragment>\r\n                    <div className=\"movie-list\">\r\n\r\n\r\n                        {movies && movies.map(movie => (<MovieItem key={movie.id} movie={movie} />))}\r\n                    </div>\r\n\r\n                    <div className=\"secondary-buttons\">\r\n                        <button onClick={onClick}>Voltar para a seleção de filmes</button>\r\n                        <button onClick={getRandomMovie}>Mudei de idéia, escolhe um filme pra mim!</button>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    } else {\r\n        history.push('/')\r\n        return null\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default MovieList\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport MovieContext from '../context/movieContext/movieContext';\r\nimport MovieItemContext from '../context/movieItemContext/movieItemContext';\r\n\r\n\r\n\r\nconst MoviePage = () => {\r\n    const movieContext = useContext(MovieContext);\r\n    const movieItemContext = useContext(MovieItemContext);\r\n\r\n    const { getRandomMovie, randomMovie } = movieContext;\r\n    const { lang } = movieItemContext;\r\n\r\n    const history = useHistory();\r\n    const onClick = () => {\r\n        history.push('/');\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getRandomMovie({ lang })\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const clicked = () => {\r\n        getRandomMovie({ lang });\r\n    }\r\n\r\n\r\n    if (lang === 'eng') {\r\n        return (\r\n            (randomMovie ? <div className=\"movie-page\">\r\n                <div className=\"movie-list-details\">\r\n                    <div className=\"movie-item-details\">\r\n                        <h2>{randomMovie.title}</h2>\r\n                        <div className=\"main-details\">\r\n                            <img src={`https://image.tmdb.org/t/p/original/${randomMovie.poster_path}`} alt=\"\" />\r\n                            <div className=\"main-details2\">\r\n                                {randomMovie.overview.length > 0 ? (<h3>Synopsis: {<span className=\"paragraph\">{randomMovie.overview}</span>}</h3>) : (<p>Couldn't find this movie's synopsis.</p>)}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"extended-details\">\r\n                            {randomMovie.budget !== '0.00' ? (<h4>Budget: ${<span className=\"thin\">{randomMovie.budget}</span>}</h4>) : null}\r\n\r\n                            {randomMovie.revenue !== '0.00' ? (<h4>Revenue: ${<span className=\"thin\">{randomMovie.revenue}</span>}</h4>) : null}\r\n\r\n\r\n                            <h4>Genres: {randomMovie.genres.map(genre => {\r\n                                return <span className=\"thin\">{genre.name} </span>\r\n                            })}</h4>\r\n                            <h4>Release Date: {<span className=\"thin\">{randomMovie.release_date}</span>}</h4>\r\n                            <h4>Runtime: {<span className=\"thin\">{`${randomMovie.runtime} minutes`}</span>}</h4>\r\n                            <h4>Rating: {<span className=\"thin\">{`${randomMovie.vote_average}/10 `}</span>}</h4>\r\n                            <h4>{randomMovie.vote_count} {<span className=\"thin\">users rated this movie.</span>}</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"try-again\">Didn't like this movie? Try a random search!\r\n                    <button onClick={clicked}><i className=\"fas fa-random fa-lg\"></i></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={onClick}>Go back to the movie list</button>\r\n\r\n\r\n\r\n            </div> : <div className=\"movie-page\">\r\n                    <div className=\"movie-list-details\">\r\n                        <div className=\"movie-item-details\">\r\n                            <h2>Looking for movies...</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>))\r\n\r\n    } else {\r\n        return (\r\n            (randomMovie ? <div className=\"movie-page\">\r\n                <div className=\"movie-list-details\">\r\n                    <div className=\"movie-item-details\">\r\n                        <h2>{randomMovie.title}</h2>\r\n                        <div className=\"main-details\">\r\n                            <img src={`https://image.tmdb.org/t/p/original/${randomMovie.poster_path}`} alt=\"\" />\r\n                            <div className=\"main-details2\">\r\n                                {randomMovie.overview.length > 0 ? (<h3>Sinopse: {<span className=\"paragraph\">{randomMovie.overview}</span>}</h3>) : (<p>Não foi possível encontrar a sinopse deste filme.</p>)}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"extended-details\">\r\n                            {randomMovie.budget !== '0.00' ? (<h4>Orçamento: ${<span className=\"thin\">{randomMovie.budget}</span>}</h4>) : null}\r\n\r\n                            {randomMovie.revenue !== '0.00' ? (<h4>Bilheteria: ${<span className=\"thin\">{randomMovie.revenue}</span>}</h4>) : null}\r\n\r\n\r\n                            <h4>Gêneros: {randomMovie.genres.map(genre => {\r\n                                return <span className=\"thin\">{genre.name} </span>\r\n                            })}</h4>\r\n                            <h4>Data de lançamento: {<span className=\"thin\">{randomMovie.release_date}</span>}</h4>\r\n                            <h4>Duração: {<span className=\"thin\">{`${randomMovie.runtime} minutos`}</span>}</h4>\r\n                            <h4>Nota: {<span className=\"thin\">{`${randomMovie.vote_average}/10 `}</span>}</h4>\r\n                            <h4>{randomMovie.vote_count} {<span className=\"thin\">usuários avalariam este filme.</span>}</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"try-again\">Não gostou? Pesquisa aleatória!\r\n                    <button onClick={clicked}><i className=\"fas fa-random fa-lg\"></i></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={onClick}>Voltar para a lista de filmes</button>\r\n\r\n\r\n\r\n            </div> : <div className=\"movie-page\">\r\n                    <div className=\"movie-list-details\">\r\n                        <div className=\"movie-item-details\">\r\n                            <h2>Aguarde enquanto procuramos um filme.</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>))\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default MoviePage;\r\n","import React, { useContext, Fragment } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport MovieItemContext from '../context/movieItemContext/movieItemContext'\r\n\r\nconst MovieDetails = () => {\r\n    const movieItemContext = useContext(MovieItemContext);\r\n\r\n    const { movieDetails, lang } = movieItemContext;\r\n\r\n    const redirect = (argument) => {\r\n        history.push(`${argument}`)\r\n    }\r\n\r\n    const history = useHistory();\r\n    const onClick = () => {\r\n        redirect('/movielist');\r\n    }\r\n\r\n    const clicked = () => {\r\n        redirect('/moviepage');\r\n    }\r\n\r\n\r\n    if (lang === 'eng') {\r\n        return (\r\n            <Fragment>\r\n                {movieDetails ? (<div className=\"movie-page\">\r\n                    <div className=\"movie-list-details\">\r\n                        <div className=\"movie-item-details\">\r\n                            <h2>{movieDetails.title}</h2>\r\n                            <div className=\"main-details\">\r\n                                <img src={`https://image.tmdb.org/t/p/original/${movieDetails.poster_path}`} alt=\"\" />\r\n                                <div className=\"main-details2\">\r\n                                    {movieDetails.overview.length > 0 ? (<h3>Synopsis: {<span className=\"paragraph\">{movieDetails.overview}</span>}</h3>) : (<p>Couldn't find this movie's synopsis.</p>)}\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"extended-details\">\r\n                                {movieDetails.budget !== '0.00' ? (<h4>Budget: ${<span className=\"thin\">{movieDetails.budget}</span>}</h4>) : null}\r\n\r\n                                {movieDetails.revenue !== '0.00' ? (<h4>Revenue: ${<span className=\"thin\">{movieDetails.revenue}</span>}</h4>) : null}\r\n\r\n\r\n                                <h4>Genres: {movieDetails.genres.map(genre => {\r\n                                    return <span className=\"thin\">{genre.name} </span>\r\n                                })}</h4>\r\n                                <h4>Release Date: {<span className=\"thin\">{movieDetails.release_date}</span>}</h4>\r\n                                <h4>Runtime: {<span className=\"thin\">{`${movieDetails.runtime} minutos`}</span>}</h4>\r\n                                <h4>Rating: {<span className=\"thin\">{`${movieDetails.vote_average}/10 `}</span>}</h4>\r\n                                <h4>{movieDetails.vote_count} {<span className=\"thin\">users rated this movie.</span>}</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"try-again\">Didn't like this movie? Try a random search!\r\n                        <button onClick={clicked}><i className=\"fas fa-random fa-lg\"></i></button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button onClick={onClick}>Go back to the movie list</button>\r\n\r\n\r\n\r\n                </div>) : (redirect('/'))}\r\n            </Fragment>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <Fragment>\r\n                {movieDetails ? (<div className=\"movie-page\">\r\n                    <div className=\"movie-list-details\">\r\n                        <div className=\"movie-item-details\">\r\n                            <h2>{movieDetails.title}</h2>\r\n                            <div className=\"main-details\">\r\n                                <img src={`https://image.tmdb.org/t/p/original/${movieDetails.poster_path}`} alt=\"\" />\r\n                                <div className=\"main-details2\">\r\n                                    {movieDetails.overview.length > 0 ? (<h3>Sinopse: {<span className=\"paragraph\">{movieDetails.overview}</span>}</h3>) : (<p>Não foi possível encontrar a sinopse deste filme.</p>)}\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"extended-details\">\r\n                                {movieDetails.budget !== '0.00' ? (<h4>Orçamento: ${<span className=\"thin\">{movieDetails.budget}</span>}</h4>) : null}\r\n\r\n                                {movieDetails.revenue !== '0.00' ? (<h4>Bilheteria: ${<span className=\"thin\">{movieDetails.revenue}</span>}</h4>) : null}\r\n\r\n\r\n                                <h4>Gêneros: {movieDetails.genres.map(genre => {\r\n                                    return <span className=\"thin\">{genre.name} </span>\r\n                                })}</h4>\r\n                                <h4>Data de lançamento: {<span className=\"thin\">{movieDetails.release_date}</span>}</h4>\r\n                                <h4>Duração: {<span className=\"thin\">{`${movieDetails.runtime} minutos`}</span>}</h4>\r\n                                <h4>Nota: {<span className=\"thin\">{`${movieDetails.vote_average}/10 `}</span>}</h4>\r\n                                <h4>{movieDetails.vote_count} {<span className=\"thin\">usuários avalariam este filme.</span>}</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"try-again\">Não gostou? Pesquisa aleatória!\r\n                        <button onClick={clicked}><i className=\"fas fa-random fa-lg\"></i></button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button onClick={onClick}>Voltar para a lista de filmes</button>\r\n\r\n\r\n\r\n                </div>) : (redirect('/'))}\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default MovieDetails;\r\n","import React, { useContext } from 'react';\r\nimport AlertContext from '../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n    const alertContext = useContext(AlertContext);\r\n\r\n\r\n    return (\r\n        alertContext.alerts.length > 0 && alertContext.alerts.map(alert => (\r\n            <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n                <i className=\"fas fa-info-circle\"></i> {alert.msg}\r\n            </div>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default Alerts;\r\n","import React, { Fragment, useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport MovieContext from '../../context/movieContext/movieContext';\r\nimport MovieItemContext from '../../context/movieItemContext/movieItemContext';\r\n\r\n\r\nconst NavbarItems = () => {\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    const movieItemContext = useContext(MovieItemContext);\r\n\r\n    const { lang, changeLang } = movieItemContext;\r\n\r\n    const movieContext = useContext(MovieContext);\r\n\r\n    const { clearMovies } = movieContext;\r\n\r\n    const onClick = () => {\r\n\r\n        if (active) {\r\n            setActive(!active)\r\n\r\n        }\r\n        clearMovies();\r\n    }\r\n\r\n    const checkAndSetLang = () => {\r\n        changeLang()\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"logo\">\r\n                {lang === 'eng' ? (<a onClick={onClick}><Link to='/'>Recommend me a Movie</Link></a>) : (<a onClick={onClick}><Link to='/'>Me Recomende um Filme</Link></a>)}\r\n            </div>\r\n            <ul className={active ? \"nav-active\" : \"nav-links\"}>\r\n                {lang === 'eng' ? (<Fragment><li onClick={onClick}><Link to='/'>Home</Link></li>\r\n                    <li onClick={onClick}><Link to='/about'>About</Link></li>\r\n                    <div className=\"language-settings\"><i class=\"fas fa-language fa-2x\"></i><button onClick={checkAndSetLang}>PT</button></div>\r\n                </Fragment>) : (<Fragment><li onClick={onClick}><Link to='/'>Início</Link></li>\r\n                    <li onClick={onClick}><Link to='/about'>Sobre</Link></li>\r\n                    <div className=\"language-settings\"><i class=\"fas fa-language fa-2x\"></i> <button onClick={checkAndSetLang}>ENG</button></div></Fragment>)}\r\n\r\n            </ul>\r\n            <div className={active ? \"toggle burger\" : \"burger\"} onClick={() => setActive(!active)}>\r\n                <div className=\"line1\"></div>\r\n                <div className=\"line2\"></div>\r\n                <div className=\"line3\"></div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NavbarItems\r\n","import React from 'react';\r\nimport NavbarItems from './navbarItems';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav>\r\n            <NavbarItems />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useContext } from 'react'\r\nimport MovieItemContext from '../context/movieItemContext/movieItemContext';\r\n\r\nconst Footer = () => {\r\n    const movieItemContext = useContext(MovieItemContext);\r\n\r\n    const { lang } = movieItemContext;\r\n    if (lang === 'eng') {\r\n        return (\r\n            <footer>\r\n                <div className=\"footer\">\r\n                    <p>Recommend me a Movie - 2021</p>\r\n                </div>\r\n            </footer>\r\n        )\r\n    } else {\r\n        return (\r\n            <footer>\r\n                <div className=\"footer\">\r\n                    <p>Me Recomende um Filme - 2021</p>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer\r\n","import { GET_ERROR, GET_MOVIES, GET_MOVIE_DETAILS, SET_MOVIE_GENRE, GET_RANDOM_MOVIE, CLEAR_MOVIES } from '../../../../types'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload\r\n            }\r\n        case GET_RANDOM_MOVIE:\r\n            return {\r\n                ...state,\r\n                randomMovie: action.payload\r\n            }\r\n        case SET_MOVIE_GENRE:\r\n            return {\r\n                ...state,\r\n                movieGenre: action.payload\r\n            }\r\n        case GET_MOVIE_DETAILS:\r\n            return {\r\n                ...state,\r\n                singleMovie: action.payload\r\n            }\r\n        case CLEAR_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: null,\r\n                movieGenre: null,\r\n                randomMovie: null\r\n            }\r\n        case GET_ERROR: {\r\n            return {\r\n                ...state,\r\n                movies: null,\r\n                error: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const GET_MOVIES = 'GET_MOVIES';\r\nexport const GET_ERROR = 'GET_ERROR';\r\nexport const CLEAR_FETCH = 'CLEAR_FETCH';\r\nexport const GET_MOVIE_DETAILS = 'GET_MOVIE_DETAILS';\r\nexport const SET_MOVIE_GENRE = 'SET_MOVIE_GENRE';\r\nexport const GET_RANDOM_MOVIE = 'GET_RANDOM_MOVIE';\r\nexport const CLEAR_MOVIES = 'CLEAR_MOVIES';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const PORTUGUESE = 'PORTUGUESE';\r\nexport const ENGLISH = 'ENGLISH';","import React, { useReducer, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport MovieContext from './movieContext'\r\nimport MovieItemContext from '../../context/movieItemContext/movieItemContext'\r\nimport { GET_ERROR, GET_MOVIES, SET_MOVIE_GENRE, GET_RANDOM_MOVIE, CLEAR_MOVIES } from '../../../../types'\r\nimport movieReducer from './movieReducer';\r\n\r\n\r\nconst MovieState = (props) => {\r\n    const initialState = {\r\n        movies: null,\r\n        error: null,\r\n        movieGenre: null,\r\n        randomMovie: null,\r\n    };\r\n\r\n\r\n\r\n\r\n    const [state, dispatch] = useReducer(movieReducer, initialState);\r\n\r\n    const movieItemContext = useContext(MovieItemContext);\r\n\r\n    const { lang } = movieItemContext;\r\n\r\n\r\n\r\n\r\n\r\n    const getMovies = async (obj) => {\r\n        const { genre } = obj.movie;\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/movies', obj, config)\r\n\r\n\r\n\r\n            dispatch({ type: GET_MOVIES, payload: res.data.results });\r\n            dispatch({ type: SET_MOVIE_GENRE, payload: genre })\r\n\r\n        } catch (err) {\r\n            dispatch({ type: GET_ERROR, payload: err.status_message });\r\n        }\r\n\r\n    }\r\n\r\n    const clearMovies = () => {\r\n\r\n\r\n        dispatch({ type: CLEAR_MOVIES })\r\n    }\r\n\r\n    const getRandomMovie = async (language) => {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n\r\n\r\n            const res = await axios.post('/api/random-movie', language, config)\r\n\r\n\r\n            dispatch({ type: GET_RANDOM_MOVIE, payload: res.data });\r\n\r\n\r\n\r\n\r\n        } catch (err) {\r\n            dispatch({ type: GET_ERROR, payload: err.message });\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <MovieContext.Provider value={{\r\n            movies: state.movies,\r\n            error: state.error,\r\n            movieGenre: state.movieGenre,\r\n            randomMovie: state.randomMovie,\r\n            getMovies,\r\n            getRandomMovie,\r\n            clearMovies,\r\n        }}>\r\n            {props.children}\r\n\r\n        </MovieContext.Provider>\r\n    )\r\n};\r\n\r\nexport default MovieState\r\n","import { GET_MOVIE_DETAILS, GET_ERROR, PORTUGUESE, ENGLISH } from '../../../../types'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_MOVIE_DETAILS:\r\n            return {\r\n                ...state,\r\n                movieDetails: action.payload\r\n            }\r\n\r\n        case PORTUGUESE: {\r\n            return {\r\n                ...state,\r\n                lang: action.payload\r\n            }\r\n        }\r\n        case ENGLISH: {\r\n            return {\r\n                ...state,\r\n                lang: action.payload\r\n            }\r\n        }\r\n        case GET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport { GET_MOVIE_DETAILS, GET_ERROR, PORTUGUESE, ENGLISH } from '../../../../types';\r\nimport MovieItemReducer from '../movieItemContext/movieItemReducer';\r\nimport MovieItemContext from '../movieItemContext/movieItemContext';\r\n\r\nconst MovieItemState = (props) => {\r\n    const initialState = {\r\n        movieDetails: null,\r\n        lang: 'eng',\r\n        error: null\r\n\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(MovieItemReducer, initialState);\r\n\r\n    const changeLang = () => {\r\n        if (state.lang === 'eng') {\r\n            dispatch({ type: PORTUGUESE, payload: 'pt' });\r\n\r\n        } else {\r\n            dispatch({ type: ENGLISH, payload: 'eng' });\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const getMovieDetails = async (obj) => {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n\r\n        try {\r\n            const res = await axios.post('/api/movie/details', obj, config)\r\n\r\n\r\n\r\n\r\n\r\n            dispatch({ type: GET_MOVIE_DETAILS, payload: res.data });\r\n\r\n\r\n\r\n\r\n        } catch (err) {\r\n            dispatch({ type: GET_ERROR, payload: err.status_message });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <MovieItemContext.Provider value={{\r\n            movieDetails: state.movieDetails,\r\n            lang: state.lang,\r\n            changeLang,\r\n            getMovieDetails\r\n        }}>\r\n            {props.children}\r\n\r\n        </MovieItemContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MovieItemState\r\n","import { SET_ALERT, REMOVE_ALERT } from '../../../../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case SET_ALERT:\r\n            return [...state, action.payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { useReducer } from 'react';\r\nimport AlertContext from '../alert/alertContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport alertReducer from '../alert/alertReducer';\r\nimport {\r\n    SET_ALERT, REMOVE_ALERT\r\n} from '../../../../types';\r\n\r\nconst AlertState = props => {\r\n    const initialState = [];\r\n\r\n    const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n    // Set Alert\r\n    const setAlert = (msg, type, timeout = 5000) => {\r\n        const id = uuidv4();\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: { msg, type, id }\r\n        });\r\n\r\n        setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\r\n    }\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            alerts: state,\r\n            setAlert\r\n        }} >\r\n            {props.children}\r\n        </AlertContext.Provider >\r\n    )\r\n};\r\n\r\nexport default AlertState;","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './client/layout/pages/Home'\nimport About from './client/layout/pages/About'\nimport MovieList from './client/layout/pages/MovieList'\nimport MoviePage from './client/layout/pages/MoviePage'\nimport MovieDetails from './client/layout/pages/MovieDetails'\nimport Alerts from './client/layout/components/Alerts'\nimport Navbar from './client/layout/components/Navbar/navbar';\nimport Footer from './client/layout/components/footer'\nimport MovieState from './client/layout/context/movieContext/MovieState'\nimport MovieItemState from './client/layout/context/movieItemContext/MovieItemState'\nimport AlertState from './client/layout/context/alert/AlertState'\n\nimport './css/main.css';\nconst App = () => {\n\n  return (\n    <MovieItemState>\n      <MovieState>\n        <AlertState>\n          <Router>\n            <Fragment>\n              <Navbar />\n              <Alerts />\n              <Footer />\n\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/movielist' component={MovieList} />\n                <Route exact path='/moviepage' component={MoviePage} />\n                <Route exact path='/moviedetails' component={MovieDetails} />\n              </Switch>\n            </Fragment>\n          </Router>\n        </AlertState>\n      </MovieState>\n    </MovieItemState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}