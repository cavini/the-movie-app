{"version":3,"sources":["client/layout/context/movieContext/movieContext.js","client/layout/context/alert/alertContext.js","client/layout/components/movieselector.js","client/layout/pages/Home.js","client/layout/pages/About.js","client/layout/context/movieItemContext/movieItemContext.js","client/layout/components/MovieItem.js","client/layout/pages/MovieList.js","client/layout/pages/MoviePage.js","client/layout/pages/MovieDetails.js","client/layout/components/Alerts.js","client/layout/components/Navbar/navbarItems.js","client/layout/components/Navbar/navbar.js","client/layout/components/footer.js","client/layout/context/movieContext/movieReducer.js","types.js","client/layout/context/movieContext/MovieState.js","client/layout/context/movieItemContext/movieItemReducer.js","client/layout/context/movieItemContext/MovieItemState.js","client/layout/context/alert/alertReducer.js","client/layout/context/alert/AlertState.js","App.js","index.js"],"names":["movieContext","createContext","alertContext","MovieSelector","useContext","MovieContext","AlertContext","history","useHistory","getMovies","movieGenre","setAlert","useState","with_genres","sort_by","certification","genre","movie","setMovie","onChange","e","target","name","value","redirect","argument","push","className","onSubmit","preventDefault","onClick","selectedOptions","text","Home","About","href","rel","src","alt","movieItemContext","withRouter","getMovieDetails","MovieItemContext","release_date","includes","year","slice","month","day","a","title","poster_path","overview","vote_average","MovieList","movies","clearMovies","length","map","MovieItem","key","id","MoviePage","getRandomMovie","randomMovie","useEffect","budget","revenue","genres","runtime","vote_count","MovieDetails","movieDetails","Alerts","alerts","alert","type","msg","NavbarItems","active","setActive","to","Navbar","footer","state","action","payload","singleMovie","error","MovieState","props","useReducer","movieReducer","dispatch","config","headers","axios","post","res","data","results","status_message","get","message","Provider","children","MovieItemState","MovieItemReducer","filter","AlertState","alertReducer","timeout","uuidv4","setTimeout","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80a24eef.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nconst movieContext = createContext();\r\n\r\nexport default movieContext\r\n","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;","import React, { Fragment, useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MovieContext from '../context/movieContext/movieContext';\r\nimport AlertContext from '../context/alert/alertContext';\r\n\r\nconst MovieSelector = () => {\r\n\r\n\r\n\r\n    const movieContext = useContext(MovieContext);\r\n    const alertContext = useContext(AlertContext);\r\n    const history = useHistory();\r\n\r\n\r\n\r\n    const { getMovies, movieGenre } = movieContext;\r\n    const { setAlert } = alertContext;\r\n\r\n    const [movie, setMovie] = useState({\r\n        with_genres: '',\r\n        sort_by: '',\r\n        certification: '',\r\n        genre: '',\r\n    });\r\n\r\n    const { with_genres, sort_by, certification } = movie;\r\n\r\n\r\n\r\n\r\n\r\n    const onChange = e => setMovie({\r\n        ...movie, [e.target.name]: e.target.value\r\n\r\n\r\n    });\r\n\r\n    const redirect = (argument) => {\r\n        history.push(`/${argument}`)\r\n    }\r\n\r\n    if (movieGenre) {\r\n        redirect(\"movielist\");\r\n    }\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (certification === '' || sort_by === '' || with_genres === '') {\r\n            setAlert('Por favor preencha todos os campos', 'danger')\r\n        } else {\r\n            getMovies(movie);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const onClick = e => setMovie({\r\n        ...movie, genre: e.target.selectedOptions[0].text\r\n\r\n    })\r\n\r\n\r\n\r\n    const getRandomGenre = () => {\r\n        redirect(\"moviepage\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"content\">\r\n                <div className=\"primary\">\r\n                    <h1>O que você quer assistir hoje?</h1>\r\n\r\n                    <form className=\"botoes\" onSubmit={onSubmit}>\r\n                        <label>Gênero</label>\r\n                        <select className=\"select-css\" name=\"with_genres\" onClick={onClick} onChange={onChange} >\r\n                            <option value=\"0\">Selecione</option>\r\n                            <option value=\"28\" name=\"Ação\" className=\"active\">Ação</option>\r\n                            <option value=\"12\" name=\"Aventura\">Aventura</option>\r\n                            <option value=\"16\" name=\"Animação\">Animação</option>\r\n                            <option value=\"35\" name=\"Comédia\">Comédia</option>\r\n                            <option value=\"80\" name=\"Crime\">Crime</option>\r\n                            <option value=\"99\" name=\"Documentários\">Documentários</option>\r\n                            <option value=\"18\" name=\"Drama\">Drama</option>\r\n                            <option value=\"10751\" name=\"Família\">Família</option>\r\n                            <option value=\"14\" name=\"Fantasia\">Fantasia</option>\r\n                            <option value=\"36\" name=\"História\">História</option>\r\n                            <option value=\"27\" name=\"Terror\">Terror</option>\r\n                            <option value=\"10402\" name=\"Musicais\">Musicais</option>\r\n                            <option value=\"9648\" name=\"Mistério\">Mistério</option>\r\n                            <option value=\"10749\" name=\"Romance\">Romance</option>\r\n                            <option value=\"878\" name=\"Sci-fi\">Sci-fi</option>\r\n                            <option value=\"10752\" name=\"Guerra\">Guerra</option>\r\n                            <option value=\"37\" name=\"Velho-Oeste\">Velho-Oeste</option>\r\n                        </select>\r\n                        <label>Organizar por</label>\r\n                        <select className=\"select-css\" name=\"sort_by\" onChange={onChange}>\r\n                            <option value=\"0\">Selecione</option>\r\n                            <option value=\"popularity.desc\">Mais populares</option>\r\n                            <option value=\"popularity.asc\">Menos populares</option>\r\n                            <option value=\"vote_average.desc\">Maiores notas</option>\r\n                            <option value=\"vote_average.asc\">Menores notas</option>\r\n                            <option value=\"vrevenue.desc\">Sucesso de bilheteria</option>\r\n                            <option value=\"primary_release_date.desc\">Mais Recentes</option>\r\n                            <option value=\"primary_release_date.asc\">Mais Antigos</option>\r\n                        </select>\r\n                        <label>Classificação Indicativa</label>\r\n                        <select className=\"select-css\" name=\"certification\" onChange={onChange}>\r\n                            <option value=\"0\">Selecione</option>\r\n                            <option value=\"L\">Livre</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"12\">12</option>\r\n                            <option value=\"14\">14</option>\r\n                            <option value=\"16\">16</option>\r\n                            <option value=\"18\">18+</option>\r\n                        </select>\r\n                        <button><i className=\"fas fa-search\"></i></button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"random-search\"><h2>Não sei, qualquer coisa serve!</h2>\r\n                    <button onClick={getRandomGenre}>Aleatório <i className=\"fas fa-random\"></i></button></div>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MovieSelector;\r\n","import React from 'react';\r\nimport MovieSelector from '../components/movieselector';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <main>\r\n            <MovieSelector />\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n\r\n        <main>\r\n            <div className=\"about\">\r\n                <h1>Sobre o projeto</h1>\r\n\r\n                <p>Este projeto surgiu da necessidade de buscar formas de entretenimento de forma rápida, fácil e descomplicada sem ter que passar pela experiência de ficar horas rolando por catálogos e listas de filmes pela internet e acabar desistindo. O maior foco desse aplicativo foi criar uma solução pensada em design responsivo e noções de UI/UX para deixar a experiência do usuário a mais agradável e intuitiva possível. Sua principal função, é através de um input mínimo do usuário, retornar uma lista personalizada e organizada de filmes de acordo com o seu gosto pessoal, ou se preferir, pode utilizar da função de busca aleatória e receber uma recomendação de filme, fazendo uma busca com valores escolhidos aleatoriamente dentro de arrays para cada parâmetro. Para colocar essa idéia em prática, precisei criar uma API em Express para esconder a minha API Key. Fiz uso dessas tecnologias também: React, NPM, Sass, NodeJS, Axios, Context API, Concurrently, Dotenv e Nodemon. Além de claro, utilizar a The Movie Database API para fornecer os filmes com suas informações. Para ver o código deste projeto e outros, o link do GitHub está aqui em baixo. Aproveite também para ver o restante do meu portfólio e seguir nas redes sociais.\r\n\r\n            </p>\r\n                <div className=\"icons\">\r\n                    <a href=\"https://github.com/cavini\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github fa-2x\"></i></a>\r\n                    <a href=\"https://twitter.com/arthurcavini\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-twitter fa-2x\"></i></a>\r\n                    <a href=\"https://www.linkedin.com/in/cavini/\" target=\"_blank\" rel=\"noopener noreferrer\"><i\r\n                        className=\"fab fa-linkedin-in fa-2x\"></i></a>\r\n                </div>\r\n                <div className=\"footer-note\">\r\n                    <div className=\"primary\">\r\n\r\n                        <a href=\"https://www.themoviedb.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <img src={\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_1-8ba2ac31f354005783fab473602c34c3f4fd207150182061e425d366e4f34596.svg\"} alt=\"The movie database logo\" />  </a>\r\n                        <p className=\"block\">This product uses the TMDb API but is not endorsed or certified by TMDb.\r\n                        Todas as informações sobre os filmes são fornecidas pela API e seus colaboradores.</p>\r\n                        <p>Criação, desenvolvimento e design por Arthur Cavini</p>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"secondary\">\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </main>\r\n\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { createContext } from 'react'\r\n\r\nconst movieItemContext = createContext();\r\n\r\n\r\nexport default movieItemContext;","import React, { useContext } from 'react';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport MovieItemContext from '../context/movieItemContext/movieItemContext';\r\n\r\n\r\n\r\nconst Movieitem = ({ movie }) => {\r\n\r\n    const movieItemContext = useContext(MovieItemContext);\r\n\r\n\r\n    const { getMovieDetails } = movieItemContext;\r\n\r\n\r\n    if (!movie.release_date.includes(\"/\")) {\r\n        const year = movie.release_date.slice(0, 4)\r\n\r\n        const month = movie.release_date.slice(5, 7)\r\n        const day = movie.release_date.slice(8, 11)\r\n        movie.release_date = `${day}/${month}/${year}`\r\n    }\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const redirect = () => {\r\n        history.push('/moviedetails')\r\n    }\r\n\r\n    const onClick = async () => {\r\n        await getMovieDetails(movie);\r\n\r\n        redirect();\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"movie-item\">\r\n            <h2>{movie.title}</h2>\r\n            <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={`Poster do filme ${movie.title}`} />\r\n            {/* <h3>Sinopse:</h3>\r\n            <p>{movie.overview}</p> */}\r\n\r\n            {movie.overview ? (\r\n                <><h3>{\"Sinopse:\"}</h3><p>{movie.overview}</p></>) : <p>Não foi possível encontrar a sinopse deste filme.</p>}\r\n\r\n\r\n            {movie.vote_average !== 0 ?\r\n                (<h4>Nota: {<span className=\"thin\">{`${movie.vote_average}/10`}</span>}</h4>) : <h4>Sem nota</h4>}\r\n            {movie.release_date ? (\r\n                <h4>Data de Lançamento: {<span className=\"thin\">{movie.release_date}</span>}</h4>) : <h4><span className=\"thin\">Data de lançamento indisponível</span></h4>}\r\n\r\n\r\n\r\n            <a className=\"ver-mais\" onClick={onClick}>Ver mais</a>\r\n            <a className=\"ver-sinopse\" onClick={onClick}>Ver sinopse completa</a>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Movieitem);\r\n","import React, { Fragment, useContext } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport MovieItem from '../components/MovieItem';\r\nimport MovieContext from '../context/movieContext/movieContext';\r\n\r\n\r\n\r\n\r\nconst MovieList = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const movieContext = useContext(MovieContext);\r\n\r\n\r\n\r\n    const { movies, movieGenre, clearMovies } = movieContext;\r\n\r\n    const onClick = () => {\r\n        clearMovies();\r\n        history.push('/');\r\n    }\r\n\r\n    const getRandomMovie = () => {\r\n        history.push('/moviepage');\r\n    }\r\n\r\n    if (movies) {\r\n        return (\r\n            <main>\r\n                <div className=\"movie-page\">\r\n                    <Fragment>{movies.length > 0 ? (<h1>Encontramos estes filmes de {movieGenre} para você!</h1>) : <h2>Não encontramos nenhum filme com essa combinação, quer tentar novamente?</h2>}</Fragment>\r\n                    <div className=\"movie-list\">\r\n\r\n\r\n                        {movies && movies.map(movie => (<MovieItem key={movie.id} movie={movie} />))}\r\n                    </div>\r\n\r\n                    <div className=\"secondary-buttons\">\r\n                        <button onClick={onClick}>Voltar para a seleção de filmes</button>\r\n                        <button onClick={getRandomMovie}>Mudei de idéia, escolhe um filme pra mim!</button>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    } else {\r\n        history.push('/')\r\n        return null\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default MovieList\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport MovieContext from '../context/movieContext/movieContext'\r\n\r\n\r\n\r\nconst MoviePage = () => {\r\n    const movieContext = useContext(MovieContext);\r\n\r\n    const { getRandomMovie, randomMovie } = movieContext;\r\n\r\n    const history = useHistory();\r\n    const onClick = () => {\r\n        history.push('/');\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getRandomMovie()\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const clicked = () => {\r\n        getRandomMovie();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        (randomMovie ? <div className=\"movie-page\">\r\n            <div className=\"movie-list-details\">\r\n                <div className=\"movie-item-details\">\r\n                    <h2>{randomMovie.title}</h2>\r\n                    <div className=\"main-details\">\r\n                        <img src={`https://image.tmdb.org/t/p/original/${randomMovie.poster_path}`} alt=\"\" />\r\n                        <div className=\"main-details2\">\r\n                            {randomMovie.overview.length > 0 ? (<h3>Sinopse: {<span className=\"paragraph\">{randomMovie.overview}</span>}</h3>) : (<p>Não foi possível encontrar a sinopse deste filme.</p>)}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"extended-details\">\r\n                        {randomMovie.budget !== '0.00' ? (<h4>Orçamento: ${<span className=\"thin\">{randomMovie.budget}</span>}</h4>) : null}\r\n\r\n                        {randomMovie.revenue !== '0.00' ? (<h4>Bilheteria: ${<span className=\"thin\">{randomMovie.revenue}</span>}</h4>) : null}\r\n\r\n\r\n                        <h4>Gêneros: {randomMovie.genres.map(genre => {\r\n                            return <span className=\"thin\">{genre.name} </span>\r\n                        })}</h4>\r\n                        <h4>Data de lançamento: {<span className=\"thin\">{randomMovie.release_date}</span>}</h4>\r\n                        <h4>Duração: {<span className=\"thin\">{`${randomMovie.runtime} minutos`}</span>}</h4>\r\n                        <h4>Nota: {<span className=\"thin\">{`${randomMovie.vote_average}/10 `}</span>}</h4>\r\n                        <h4>{randomMovie.vote_count} {<span className=\"thin\">usuários avalariam este filme.</span>}</h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"try-again\">Não gostou? Pesquisa aleatória!\r\n                <button onClick={clicked}><i className=\"fas fa-random fa-lg\"></i></button>\r\n                </div>\r\n            </div>\r\n\r\n            <button onClick={onClick}>Voltar para a lista de filmes</button>\r\n\r\n\r\n\r\n        </div> : <div className=\"movie-page\">\r\n                <div className=\"movie-list-details\">\r\n                    <div className=\"movie-item-details\">\r\n                        <h2>Aguarde enquanto procuramos um filme.</h2>\r\n                    </div>\r\n                </div>\r\n            </div>))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default MoviePage;\r\n","import React, { useContext, Fragment } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport MovieItemContext from '../context/movieItemContext/movieItemContext'\r\n\r\nconst MovieDetails = () => {\r\n    const movieItemContext = useContext(MovieItemContext);\r\n\r\n    const { movieDetails } = movieItemContext;\r\n\r\n    const redirect = (argument) => {\r\n        history.push(`${argument}`)\r\n    }\r\n\r\n    const history = useHistory();\r\n    const onClick = () => {\r\n        redirect('/movielist');\r\n    }\r\n\r\n    const clicked = () => {\r\n        redirect('/moviepage');\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {movieDetails ? (<div className=\"movie-page\">\r\n                <div className=\"movie-list-details\">\r\n                    <div className=\"movie-item-details\">\r\n                        <h2>{movieDetails.title}</h2>\r\n                        <div className=\"main-details\">\r\n                            <img src={`https://image.tmdb.org/t/p/original/${movieDetails.poster_path}`} alt=\"\" />\r\n                            <div className=\"main-details2\">\r\n                                {movieDetails.overview.length > 0 ? (<h3>Sinopse: {<span className=\"paragraph\">{movieDetails.overview}</span>}</h3>) : (<p>Não foi possível encontrar a sinopse deste filme.</p>)}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"extended-details\">\r\n                            {movieDetails.budget !== '0.00' ? (<h4>Orçamento: ${<span className=\"thin\">{movieDetails.budget}</span>}</h4>) : null}\r\n\r\n                            {movieDetails.revenue !== '0.00' ? (<h4>Bilheteria: ${<span className=\"thin\">{movieDetails.revenue}</span>}</h4>) : null}\r\n\r\n\r\n                            <h4>Gêneros: {movieDetails.genres.map(genre => {\r\n                                return <span className=\"thin\">{genre.name} </span>\r\n                            })}</h4>\r\n                            <h4>Data de lançamento: {<span className=\"thin\">{movieDetails.release_date}</span>}</h4>\r\n                            <h4>Duração: {<span className=\"thin\">{`${movieDetails.runtime} minutos`}</span>}</h4>\r\n                            <h4>Nota: {<span className=\"thin\">{`${movieDetails.vote_average}/10 `}</span>}</h4>\r\n                            <h4>{movieDetails.vote_count} {<span className=\"thin\">usuários avalariam este filme.</span>}</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"try-again\">Não gostou? Pesquisa aleatória!\r\n                    <button onClick={clicked}><i className=\"fas fa-random fa-lg\"></i></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={onClick}>Voltar para a lista de filmes</button>\r\n\r\n\r\n\r\n            </div>) : (redirect('/'))}\r\n        </Fragment>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default MovieDetails;\r\n","import React, { useContext } from 'react';\r\nimport AlertContext from '../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n    const alertContext = useContext(AlertContext);\r\n\r\n\r\n    return (\r\n        alertContext.alerts.length > 0 && alertContext.alerts.map(alert => (\r\n            <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n                <i className=\"fas fa-info-circle\"></i> {alert.msg}\r\n            </div>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default Alerts;\r\n","import React, { Fragment, useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport MovieContext from '../../context/movieContext/movieContext';\r\n\r\n\r\nconst NavbarItems = () => {\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    const movieContext = useContext(MovieContext);\r\n\r\n    const { clearMovies } = movieContext;\r\n\r\n    const onClick = () => {\r\n\r\n        if (active) {\r\n            setActive(!active)\r\n\r\n        }\r\n        clearMovies();\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"logo\">\r\n                <a onClick={onClick}><Link to='/'>Me Recomende um Filme</Link></a>\r\n            </div>\r\n            <ul className={active ? \"nav-active\" : \"nav-links\"}>\r\n                <li onClick={onClick}><Link to='/'>Início</Link></li>\r\n                <li onClick={onClick}><Link to='/about'>Sobre</Link></li>\r\n            </ul>\r\n            <div className={active ? \"toggle burger\" : \"burger\"} onClick={() => setActive(!active)}>\r\n                <div className=\"line1\"></div>\r\n                <div className=\"line2\"></div>\r\n                <div className=\"line3\"></div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NavbarItems\r\n","import React from 'react';\r\nimport NavbarItems from './navbarItems';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav>\r\n            <NavbarItems />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\n\r\nconst footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer\">\r\n                <p>Me Recomende um Filme - 2020</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default footer\r\n","import { GET_ERROR, GET_MOVIES, GET_MOVIE_DETAILS, SET_MOVIE_GENRE, GET_RANDOM_MOVIE, CLEAR_MOVIES } from '../../../../types'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload\r\n            }\r\n        case GET_RANDOM_MOVIE:\r\n            return {\r\n                ...state,\r\n                randomMovie: action.payload\r\n            }\r\n        case SET_MOVIE_GENRE:\r\n            return {\r\n                ...state,\r\n                movieGenre: action.payload\r\n            }\r\n        case GET_MOVIE_DETAILS:\r\n            return {\r\n                ...state,\r\n                singleMovie: action.payload\r\n            }\r\n        case CLEAR_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: null,\r\n                movieGenre: null,\r\n                randomMovie: null\r\n            }\r\n        case GET_ERROR: {\r\n            return {\r\n                ...state,\r\n                movies: null,\r\n                error: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const GET_MOVIES = 'GET_MOVIES';\r\nexport const GET_ERROR = 'GET_ERROR';\r\nexport const CLEAR_FETCH = 'CLEAR_FETCH';\r\nexport const GET_MOVIE_DETAILS = 'GET_MOVIE_DETAILS';\r\nexport const SET_MOVIE_GENRE = 'SET_MOVIE_GENRE';\r\nexport const GET_RANDOM_MOVIE = 'GET_RANDOM_MOVIE';\r\nexport const CLEAR_MOVIES = 'CLEAR_MOVIES';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';","import React, { useReducer } from 'react'\r\nimport axios from 'axios'\r\nimport MovieContext from './movieContext'\r\nimport { GET_ERROR, GET_MOVIES, SET_MOVIE_GENRE, GET_RANDOM_MOVIE, CLEAR_MOVIES } from '../../../../types'\r\nimport movieReducer from './movieReducer';\r\n\r\n\r\nconst MovieState = (props) => {\r\n    const initialState = {\r\n        movies: null,\r\n        error: null,\r\n        movieGenre: null,\r\n        randomMovie: null,\r\n    };\r\n\r\n\r\n\r\n\r\n    const [state, dispatch] = useReducer(movieReducer, initialState);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const getMovies = async (movie) => {\r\n        const { genre } = movie;\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/movies', movie, config)\r\n\r\n\r\n\r\n            dispatch({ type: GET_MOVIES, payload: res.data.results });\r\n            dispatch({ type: SET_MOVIE_GENRE, payload: genre })\r\n\r\n        } catch (err) {\r\n            dispatch({ type: GET_ERROR, payload: err.status_message });\r\n        }\r\n\r\n    }\r\n\r\n    const clearMovies = () => {\r\n\r\n\r\n        dispatch({ type: CLEAR_MOVIES })\r\n    }\r\n\r\n    const getRandomMovie = async () => {\r\n\r\n\r\n\r\n        try {\r\n\r\n\r\n            const res = await axios.get('/api/random-movie')\r\n\r\n\r\n            dispatch({ type: GET_RANDOM_MOVIE, payload: res.data });\r\n\r\n\r\n\r\n\r\n        } catch (err) {\r\n            dispatch({ type: GET_ERROR, payload: err.message });\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <MovieContext.Provider value={{\r\n            movies: state.movies,\r\n            error: state.error,\r\n            movieGenre: state.movieGenre,\r\n            randomMovie: state.randomMovie,\r\n            getMovies,\r\n            getRandomMovie,\r\n            clearMovies,\r\n        }}>\r\n            {props.children}\r\n\r\n        </MovieContext.Provider>\r\n    )\r\n};\r\n\r\nexport default MovieState\r\n","import { GET_MOVIE_DETAILS, GET_ERROR } from '../../../../types'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_MOVIE_DETAILS:\r\n            return {\r\n                ...state,\r\n                movieDetails: action.payload\r\n            }\r\n        case GET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport { GET_MOVIE_DETAILS, GET_ERROR } from '../../../../types';\r\nimport MovieItemReducer from '../movieItemContext/movieItemReducer';\r\nimport MovieItemContext from '../movieItemContext/movieItemContext';\r\n\r\nconst MovieItemState = (props) => {\r\n    const initialState = {\r\n        movieDetails: null,\r\n        error: null\r\n\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(MovieItemReducer, initialState);\r\n\r\n\r\n    const getMovieDetails = async (movie) => {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n\r\n        try {\r\n            const res = await axios.post('/api/movie/details', movie, config)\r\n\r\n\r\n\r\n\r\n\r\n            dispatch({ type: GET_MOVIE_DETAILS, payload: res.data });\r\n\r\n\r\n\r\n\r\n        } catch (err) {\r\n            dispatch({ type: GET_ERROR, payload: err.status_message });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <MovieItemContext.Provider value={{\r\n            movieDetails: state.movieDetails,\r\n            getMovieDetails\r\n        }}>\r\n            {props.children}\r\n\r\n        </MovieItemContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MovieItemState\r\n","import { SET_ALERT, REMOVE_ALERT } from '../../../../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case SET_ALERT:\r\n            return [...state, action.payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { useReducer } from 'react';\r\nimport AlertContext from '../alert/alertContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport alertReducer from '../alert/alertReducer';\r\nimport {\r\n    SET_ALERT, REMOVE_ALERT\r\n} from '../../../../types';\r\n\r\nconst AlertState = props => {\r\n    const initialState = [];\r\n\r\n    const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n    // Set Alert\r\n    const setAlert = (msg, type, timeout = 5000) => {\r\n        const id = uuidv4();\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: { msg, type, id }\r\n        });\r\n\r\n        setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\r\n    }\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            alerts: state,\r\n            setAlert\r\n        }} >\r\n            {props.children}\r\n        </AlertContext.Provider >\r\n    )\r\n};\r\n\r\nexport default AlertState;","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './client/layout/pages/Home'\nimport About from './client/layout/pages/About'\nimport MovieList from './client/layout/pages/MovieList'\nimport MoviePage from './client/layout/pages/MoviePage'\nimport MovieDetails from './client/layout/pages/MovieDetails'\nimport Alerts from './client/layout/components/Alerts'\nimport Navbar from './client/layout/components/Navbar/navbar';\nimport Footer from './client/layout/components/footer'\nimport MovieState from './client/layout/context/movieContext/MovieState'\nimport MovieItemState from './client/layout/context/movieItemContext/MovieItemState'\nimport AlertState from './client/layout/context/alert/AlertState'\n\nimport './css/main.css';\nconst App = () => {\n\n  return (\n    <MovieItemState>\n      <MovieState>\n        <AlertState>\n          <Router>\n            <Fragment>\n              <Navbar />\n              <Alerts />\n              <Footer />\n\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/movielist' component={MovieList} />\n                <Route exact path='/moviepage' component={MoviePage} />\n                <Route exact path='/moviedetails' component={MovieDetails} />\n              </Switch>\n            </Fragment>\n          </Router>\n        </AlertState>\n      </MovieState>\n    </MovieItemState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}